Sub RegrouperPDIMemesVoies()
    '=====================================================
    ' MACRO : Regrouper les PDI avec mêmes voies
    ' - Demande à l'utilisateur la largeur souhaitée
    ' - Met la largeur saisie pour le premier PDI d'un groupe
    ' - Met la largeur à 0 pour les suivants de même voie
    ' - Ignore les PDI rattachés
    '=====================================================
    
    Dim wsAccueil As Worksheet
    Dim derniereLigne As Long
    Dim i As Long
    Dim voieActuelle As String
    Dim voiePrecedente As String
    Dim typePDI As String
    Dim numPDI As String
    Dim nbModifications As Long
    Dim nbGroupes As Long
    Dim debutGroupe As Boolean
    Dim largeurCase As Variant
    Dim largeurCaseNum As Integer
    
    ' Désactiver les mises à jour écran pour améliorer les performances
    Application.ScreenUpdating = False
    Application.EnableEvents = False ' Désactiver les événements pour éviter les recalculs
    
    ' Définir la feuille Accueil
    Set wsAccueil = ThisWorkbook.Sheets("Accueil")
    
    ' Trouver la dernière ligne avec des données
    derniereLigne = wsAccueil.Cells(wsAccueil.Rows.Count, "A").End(xlUp).Row
    
    ' Demander la largeur de case à l'utilisateur
    Do
        largeurCase = InputBox("Veuillez entrer la largeur de case souhaitée (entre 1 et 26) :" & vbCrLf & _
                               "Par défaut : 4", _
                               "Largeur de case", "4")
        
        ' Si l'utilisateur annule
        If largeurCase = "" Then
            MsgBox "Opération annulée.", vbInformation
            Exit Sub
        End If
        
        ' Vérifier que c'est un nombre valide
        If IsNumeric(largeurCase) Then
            largeurCaseNum = CInt(largeurCase)
            If largeurCaseNum >= 1 And largeurCaseNum <= 26 Then
                Exit Do ' Valeur valide, sortir de la boucle
            Else
                MsgBox "La largeur doit être comprise entre 1 et 26.", vbExclamation
            End If
        Else
            MsgBox "Veuillez entrer un nombre valide.", vbExclamation
        End If
    Loop
    
    ' Initialiser les compteurs
    nbModifications = 0
    nbGroupes = 0
    voiePrecedente = ""
    
    ' Message de confirmation avant de commencer
    If MsgBox("Cette macro va regrouper les PDI ayant la même voie consécutive." & vbCrLf & _
              "- Premier PDI du groupe : largeur = " & largeurCaseNum & vbCrLf & _
              "- PDI suivants même voie : largeur = 0" & vbCrLf & _
              "- Les PDI rattachés seront ignorés" & vbCrLf & vbCrLf & _
              "Voulez-vous continuer ?", vbQuestion + vbYesNo, "Confirmation") = vbNo Then
        Exit Sub
    End If
    
    ' Parcourir les lignes à partir de la ligne 7
    For i = 7 To derniereLigne
        ' Lire les données de la ligne actuelle
        numPDI = CStr(wsAccueil.Cells(i, 1).Text) ' Colonne A - Numéro PDI
        voieActuelle = CStr(wsAccueil.Cells(i, 2).Text) ' Colonne B - Nom de voie
        typePDI = CStr(wsAccueil.Cells(i, 6).Text) ' Colonne F - Type PDI
        
        ' Vérifier si c'est un PDI rattaché (à ignorer)
        If EstPDIRattache(typePDI) Then
            ' Réinitialiser la voie précédente pour ne pas continuer le regroupement
            voiePrecedente = ""
        Else
            ' PDI non rattaché - appliquer la logique de regroupement
            If voieActuelle <> "" Then ' S'assurer qu'il y a une voie
                If voieActuelle = voiePrecedente Then
                    ' Même voie que la précédente : largeur = 0
                    If wsAccueil.Cells(i, 7).Value <> 0 Then
                        wsAccueil.Cells(i, 7).Value = 0
                        nbModifications = nbModifications + 1
                    End If
                Else
                    ' Nouvelle voie ou première occurrence : largeur = valeur saisie
                    If wsAccueil.Cells(i, 7).Value <> largeurCaseNum Then
                        wsAccueil.Cells(i, 7).Value = largeurCaseNum
                        nbModifications = nbModifications + 1
                    End If
                    nbGroupes = nbGroupes + 1
                    voiePrecedente = voieActuelle
                End If
            Else
                ' Pas de voie définie, réinitialiser
                voiePrecedente = ""
            End If
        End If
    Next i
    
    ' Réactiver les mises à jour
    Application.EnableEvents = True
    Application.ScreenUpdating = True
    
    ' Message de confirmation
    MsgBox "Regroupement terminé !" & vbCrLf & vbCrLf & _
           "Largeur de case utilisée : " & largeurCaseNum & vbCrLf & _
           "Nombre de lignes modifiées : " & nbModifications & vbCrLf & _
           "Nombre de groupes créés : " & nbGroupes & vbCrLf & _
           "Total de lignes traitées : " & (derniereLigne - 6), _
           vbInformation, "Regroupement PDI"
    
End Sub
